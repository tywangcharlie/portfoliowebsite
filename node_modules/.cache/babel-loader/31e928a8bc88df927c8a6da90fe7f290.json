{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Retina = function () {\n  function Retina(container) {\n    this.container = container;\n    this.isRetina = false;\n    this.bubbleModeDistance = 0;\n    this.bubbleModeSize = 0;\n    this.connectModeDistance = 0;\n    this.connectModeRadius = 0;\n    this.grabModeDistance = 0;\n    this.repulseModeDistance = 0;\n    this.slowModeRadius = 0;\n    this.lineLinkedDistance = 0;\n    this.lineLinkedWidth = 0;\n    this.moveSpeed = 0;\n    this.sizeValue = 0;\n    this.sizeAnimationSpeed = 0;\n    this.polygonMaskMoveRadius = 0;\n    this.pixelRatio = 1;\n  }\n\n  Retina.prototype.init = function () {\n    var _a;\n\n    var container = this.container;\n    var options = container.options;\n\n    if (options.detectRetina && window.devicePixelRatio > 1) {\n      this.pixelRatio = window.devicePixelRatio;\n      this.isRetina = true;\n    } else {\n      this.pixelRatio = 1;\n      this.isRetina = false;\n    }\n\n    var ratio = this.pixelRatio;\n\n    if (container.canvas.element) {\n      var element = container.canvas.element;\n      container.canvas.size.width = element.offsetWidth * ratio;\n      container.canvas.size.height = element.offsetHeight * ratio;\n    }\n\n    var particles = options.particles;\n    this.lineLinkedDistance = particles.lineLinked.distance * ratio;\n    this.lineLinkedWidth = particles.lineLinked.width * ratio;\n    this.moveSpeed = particles.move.speed * ratio;\n    this.sizeValue = particles.size.value * ratio;\n    this.sizeAnimationSpeed = particles.size.animation.speed * ratio;\n    var interactivity = options.interactivity;\n    this.connectModeDistance = interactivity.modes.connect.distance * ratio;\n    this.connectModeRadius = interactivity.modes.connect.radius * ratio;\n    this.grabModeDistance = interactivity.modes.grab.distance * ratio;\n    this.repulseModeDistance = interactivity.modes.repulse.distance * ratio;\n    this.slowModeRadius = interactivity.modes.slow.radius * ratio;\n    this.bubbleModeDistance = interactivity.modes.bubble.distance * ratio;\n    this.bubbleModeSize = (_a = interactivity.modes.bubble.size) !== null && _a !== void 0 ? _a : this.sizeValue * ratio;\n    this.polygonMaskMoveRadius = options.polygon.move.radius * ratio;\n  };\n\n  Retina.prototype.initParticle = function (particle) {\n    var particlesOptions = particle.particlesOptions;\n    var ratio = this.pixelRatio;\n    particle.lineLinkedDistance = particlesOptions.lineLinked.distance * ratio;\n    particle.lineLinkedWidth = particlesOptions.lineLinked.width * ratio;\n    particle.moveSpeed = particlesOptions.move.speed * ratio;\n    particle.sizeValue = particlesOptions.size.value * ratio;\n\n    if (typeof particlesOptions.size.random !== \"boolean\") {\n      particle.randomMinimumSize = particlesOptions.size.random.minimumValue;\n    }\n\n    particle.sizeAnimationSpeed = particlesOptions.size.animation.speed * ratio;\n  };\n\n  Retina.prototype.reset = function () {};\n\n  return Retina;\n}();\n\nexports.Retina = Retina;","map":null,"metadata":{},"sourceType":"script"}