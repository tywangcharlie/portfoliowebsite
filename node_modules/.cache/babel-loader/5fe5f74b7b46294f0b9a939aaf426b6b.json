{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Absorber_1 = require(\"./Absorber\");\n\nvar ClickMode_1 = require(\"../../Enums/Modes/ClickMode\");\n\nvar Utils_1 = require(\"../../Utils/Utils\");\n\nvar Absorbers = function () {\n  function Absorbers(container) {\n    this.container = container;\n    this.array = [];\n  }\n\n  Absorbers.prototype.init = function () {\n    var container = this.container;\n    var options = container.options;\n\n    if (options.absorbers instanceof Array) {\n      for (var _i = 0, _a = options.absorbers; _i < _a.length; _i++) {\n        var absorberOptions = _a[_i];\n        var absorber = new Absorber_1.Absorber(this, absorberOptions);\n        this.addAbsorber(absorber);\n      }\n    } else {\n      var absorberOptions = options.absorbers;\n      var absorber = new Absorber_1.Absorber(this, absorberOptions);\n      this.addAbsorber(absorber);\n    }\n  };\n\n  Absorbers.prototype.particleUpdate = function (particle, delta) {\n    for (var _i = 0, _a = this.array; _i < _a.length; _i++) {\n      var absorber = _a[_i];\n      absorber.attract(particle, delta);\n\n      if (particle.destroyed) {\n        break;\n      }\n    }\n  };\n\n  Absorbers.prototype.draw = function (context) {\n    for (var _i = 0, _a = this.array; _i < _a.length; _i++) {\n      var absorber = _a[_i];\n      context.save();\n      absorber.draw(context);\n      context.restore();\n    }\n  };\n\n  Absorbers.prototype.stop = function () {\n    this.array = [];\n  };\n\n  Absorbers.prototype.resize = function () {\n    for (var _i = 0, _a = this.array; _i < _a.length; _i++) {\n      var absorber = _a[_i];\n      absorber.resize();\n    }\n  };\n\n  Absorbers.prototype.handleClickMode = function (mode) {\n    var container = this.container;\n    var options = container.options;\n\n    if (mode === ClickMode_1.ClickMode.absorber) {\n      var absorbersModeOptions = void 0;\n      var modeAbsorbers = options.interactivity.modes.absorbers;\n\n      if (modeAbsorbers instanceof Array) {\n        if (modeAbsorbers.length > 0) {\n          absorbersModeOptions = Utils_1.Utils.itemFromArray(modeAbsorbers);\n        }\n      } else {\n        absorbersModeOptions = modeAbsorbers;\n      }\n\n      var absorbersOptions = absorbersModeOptions !== null && absorbersModeOptions !== void 0 ? absorbersModeOptions : options.absorbers instanceof Array ? Utils_1.Utils.itemFromArray(options.absorbers) : options.absorbers;\n      var aPosition = container.interactivity.mouse.clickPosition;\n      var absorber = new Absorber_1.Absorber(this, absorbersOptions, aPosition);\n      this.addAbsorber(absorber);\n    }\n  };\n\n  Absorbers.prototype.addAbsorber = function (absorber) {\n    this.array.push(absorber);\n  };\n\n  Absorbers.prototype.removeAbsorber = function (absorber) {\n    var index = this.array.indexOf(absorber);\n\n    if (index >= 0) {\n      this.array.splice(index, 1);\n    }\n  };\n\n  return Absorbers;\n}();\n\nexports.Absorbers = Absorbers;","map":null,"metadata":{},"sourceType":"script"}