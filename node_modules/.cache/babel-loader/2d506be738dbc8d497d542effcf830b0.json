{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar Utils_1 = require(\"../../../Utils/Utils\");\n\nvar ShapeType_1 = require(\"../../../Enums/ShapeType\");\n\nvar TextDrawer = function () {\n  function TextDrawer() {}\n\n  TextDrawer.prototype.init = function (container) {\n    var _a, _b;\n\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var options, shapeOptions, _i, shapeOptions_1, character, character;\n\n      return tslib_1.__generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            options = container.options;\n            if (!(Utils_1.Utils.isInArray(ShapeType_1.ShapeType.char, options.particles.shape.type) || Utils_1.Utils.isInArray(ShapeType_1.ShapeType.character, options.particles.shape.type))) return [3, 7];\n            shapeOptions = (_a = options.particles.shape.options[ShapeType_1.ShapeType.character]) !== null && _a !== void 0 ? _a : options.particles.shape.options[ShapeType_1.ShapeType.char];\n            if (!(shapeOptions instanceof Array)) return [3, 5];\n            _i = 0, shapeOptions_1 = shapeOptions;\n            _c.label = 1;\n\n          case 1:\n            if (!(_i < shapeOptions_1.length)) return [3, 4];\n            character = shapeOptions_1[_i];\n            return [4, Utils_1.Utils.loadFont(character)];\n\n          case 2:\n            _c.sent();\n\n            _c.label = 3;\n\n          case 3:\n            _i++;\n            return [3, 1];\n\n          case 4:\n            return [3, 7];\n\n          case 5:\n            character = (_b = options.particles.shape.options[ShapeType_1.ShapeType.character]) !== null && _b !== void 0 ? _b : options.particles.shape.options[ShapeType_1.ShapeType.char];\n            if (!(character !== undefined)) return [3, 7];\n            return [4, Utils_1.Utils.loadFont(character)];\n\n          case 6:\n            _c.sent();\n\n            _c.label = 7;\n\n          case 7:\n            return [2];\n        }\n      });\n    });\n  };\n\n  TextDrawer.prototype.draw = function (context, particle, radius, _opacity) {\n    var character = particle.shapeData;\n\n    if (character === undefined) {\n      return;\n    }\n\n    var textData = character.value;\n\n    if (textData === undefined) {\n      return;\n    }\n\n    var textParticle = particle;\n\n    if (textParticle.text === undefined) {\n      if (textData instanceof Array) {\n        textParticle.text = Utils_1.Utils.itemFromArray(textData, particle.randomIndexData);\n      } else {\n        textParticle.text = textData;\n      }\n    }\n\n    var text = textParticle.text;\n    var style = character.style;\n    var weight = character.weight;\n    var size = Math.round(radius) * 2;\n    var font = character.font;\n    var fill = particle.fill;\n    context.font = style + \" \" + weight + \" \" + size + \"px \\\"\" + font + \"\\\"\";\n    var pos = {\n      x: -radius / 2,\n      y: radius / 2\n    };\n\n    if (fill) {\n      context.fillText(text, pos.x, pos.y);\n    } else {\n      context.strokeText(text, pos.x, pos.y);\n    }\n  };\n\n  return TextDrawer;\n}();\n\nexports.TextDrawer = TextDrawer;","map":null,"metadata":{},"sourceType":"script"}