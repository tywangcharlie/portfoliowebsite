{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Interactivity_1 = require(\"./Interactivity/Interactivity\");\n\nvar Particles_1 = require(\"./Particles/Particles\");\n\nvar PolygonMask_1 = require(\"./PolygonMask/PolygonMask\");\n\nvar BackgroundMask_1 = require(\"./BackgroundMask/BackgroundMask\");\n\nvar Background_1 = require(\"./Background/Background\");\n\nvar Emitter_1 = require(\"./Emitters/Emitter\");\n\nvar Absorber_1 = require(\"./Absorbers/Absorber\");\n\nvar Infection_1 = require(\"./Infection/Infection\");\n\nvar Plugins_1 = require(\"../../Utils/Plugins\");\n\nvar Options = function () {\n  function Options() {\n    this.absorbers = [];\n    this.background = new Background_1.Background();\n    this.backgroundMask = new BackgroundMask_1.BackgroundMask();\n    this.detectRetina = false;\n    this.emitters = [];\n    this.fpsLimit = 30;\n    this.infection = new Infection_1.Infection();\n    this.interactivity = new Interactivity_1.Interactivity();\n    this.particles = new Particles_1.Particles();\n    this.pauseOnBlur = true;\n    this.polygon = new PolygonMask_1.PolygonMask();\n  }\n\n  Object.defineProperty(Options.prototype, \"fps_limit\", {\n    get: function () {\n      return this.fpsLimit;\n    },\n    set: function (value) {\n      this.fpsLimit = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Options.prototype, \"retina_detect\", {\n    get: function () {\n      return this.detectRetina;\n    },\n    set: function (value) {\n      this.detectRetina = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Options.prototype.load = function (data) {\n    var _a, _b;\n\n    if (data !== undefined) {\n      if (data.preset !== undefined) {\n        if (data.preset instanceof Array) {\n          for (var _i = 0, _c = data.preset; _i < _c.length; _i++) {\n            var preset = _c[_i];\n            this.importPreset(preset);\n          }\n        } else {\n          this.importPreset(data.preset);\n        }\n      }\n\n      if (data.background !== undefined) {\n        this.background.load(data.background);\n      }\n\n      var detectRetina = (_a = data.detectRetina) !== null && _a !== void 0 ? _a : data.retina_detect;\n\n      if (detectRetina !== undefined) {\n        this.detectRetina = detectRetina;\n      }\n\n      var fpsLimit = (_b = data.fpsLimit) !== null && _b !== void 0 ? _b : data.fps_limit;\n\n      if (fpsLimit !== undefined) {\n        this.fpsLimit = fpsLimit;\n      }\n\n      if (data.pauseOnBlur !== undefined) {\n        this.pauseOnBlur = data.pauseOnBlur;\n      }\n\n      this.particles.load(data.particles);\n      this.infection.load(data.infection);\n      this.interactivity.load(data.interactivity);\n      this.polygon.load(data.polygon);\n      this.backgroundMask.load(data.backgroundMask);\n\n      if (data.emitters !== undefined) {\n        if (data.emitters instanceof Array) {\n          this.emitters = data.emitters.map(function (s) {\n            var tmp = new Emitter_1.Emitter();\n            tmp.load(s);\n            return tmp;\n          });\n        } else {\n          if (this.emitters instanceof Array) {\n            this.emitters = new Emitter_1.Emitter();\n          }\n\n          this.emitters.load(data.emitters);\n        }\n      }\n\n      if (data.absorbers !== undefined) {\n        if (data.absorbers instanceof Array) {\n          this.absorbers = data.absorbers.map(function (s) {\n            var tmp = new Absorber_1.Absorber();\n            tmp.load(s);\n            return tmp;\n          });\n        } else {\n          if (this.absorbers instanceof Array) {\n            this.absorbers = new Absorber_1.Absorber();\n          }\n\n          this.absorbers.load(data.absorbers);\n        }\n      }\n    }\n  };\n\n  Options.prototype.importPreset = function (preset) {\n    var presetOptions = Plugins_1.Plugins.getPreset(preset);\n\n    if (presetOptions !== undefined) {\n      this.load(presetOptions);\n    }\n  };\n\n  return Options;\n}();\n\nexports.Options = Options;","map":null,"metadata":{},"sourceType":"script"}