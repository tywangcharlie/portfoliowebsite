{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Emitter_1 = require(\"./Emitter\");\n\nvar ClickMode_1 = require(\"../../Enums/Modes/ClickMode\");\n\nvar Utils_1 = require(\"../../Utils/Utils\");\n\nvar Emitters = function () {\n  function Emitters(container) {\n    this.container = container;\n    this.array = [];\n  }\n\n  Emitters.prototype.init = function () {\n    var container = this.container;\n    var options = container.options;\n\n    if (options.emitters instanceof Array) {\n      for (var _i = 0, _a = options.emitters; _i < _a.length; _i++) {\n        var emitterOptions = _a[_i];\n        var emitter = new Emitter_1.Emitter(this, emitterOptions);\n        this.addEmitter(emitter);\n      }\n    } else {\n      var emitterOptions = options.emitters;\n      var emitter = new Emitter_1.Emitter(this, emitterOptions);\n      this.addEmitter(emitter);\n    }\n  };\n\n  Emitters.prototype.play = function () {\n    for (var _i = 0, _a = this.array; _i < _a.length; _i++) {\n      var emitter = _a[_i];\n      emitter.play();\n    }\n  };\n\n  Emitters.prototype.pause = function () {\n    for (var _i = 0, _a = this.array; _i < _a.length; _i++) {\n      var emitter = _a[_i];\n      emitter.pause();\n    }\n  };\n\n  Emitters.prototype.stop = function () {\n    this.array = [];\n  };\n\n  Emitters.prototype.handleClickMode = function (mode) {\n    var container = this.container;\n    var options = container.options;\n\n    if (mode === ClickMode_1.ClickMode.emitter) {\n      var emitterModeOptions = void 0;\n      var modeEmitters = options.interactivity.modes.emitters;\n\n      if (modeEmitters instanceof Array) {\n        if (modeEmitters.length > 0) {\n          emitterModeOptions = Utils_1.Utils.itemFromArray(modeEmitters);\n        }\n      } else {\n        emitterModeOptions = modeEmitters;\n      }\n\n      var emitterOptions = emitterModeOptions !== null && emitterModeOptions !== void 0 ? emitterModeOptions : options.emitters instanceof Array ? Utils_1.Utils.itemFromArray(options.emitters) : options.emitters;\n      var ePosition = container.interactivity.mouse.clickPosition;\n      var emitter = new Emitter_1.Emitter(this, Utils_1.Utils.deepExtend({}, emitterOptions), ePosition);\n      this.addEmitter(emitter);\n    }\n  };\n\n  Emitters.prototype.resize = function () {\n    for (var _i = 0, _a = this.array; _i < _a.length; _i++) {\n      var emitter = _a[_i];\n      emitter.resize();\n    }\n  };\n\n  Emitters.prototype.addEmitter = function (emitter) {\n    this.array.push(emitter);\n  };\n\n  Emitters.prototype.removeEmitter = function (emitter) {\n    var index = this.array.indexOf(emitter);\n\n    if (index >= 0) {\n      this.array.splice(index, 1);\n    }\n  };\n\n  return Emitters;\n}();\n\nexports.Emitters = Emitters;","map":null,"metadata":{},"sourceType":"script"}